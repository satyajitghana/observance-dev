server {
    server_name observance.ddns.net;

        # managed by Certbot
    listen [::]:5443 ssl ipv6only=on; # managed by Certbot
    listen 5443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/observance.ddns.net/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/observance.ddns.net/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

    root /home/satyajit/colliers-project/colliers-dev/development/inkers-bench/sites;

        location / {
                #proxy_set_header Host inkers.localhost;
                proxy_set_header X-Frappe-Site-Name inkers.localhost;
        	#add_header Access-Control-Allow-Origin *;
		#add_header              'Access-Control-Allow-Origin' '$http_origin' always;
                proxy_pass http://127.0.0.1:8000;
        }

	location /observance-socket/socket.io {

                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header X-Frappe-Site-Name inkers.localhost;
                #proxy_set_header Origin $scheme://$http_host;
                proxy_set_header Origin $scheme://$http_host;
                proxy_set_header Host $scheme://$http_host;

                proxy_pass http://127.0.0.1:9002;
	}

	location /socket.io {

                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header X-Frappe-Site-Name inkers.localhost;
                #proxy_set_header Origin $scheme://$http_host;
                proxy_set_header Origin $scheme://$http_host;
                proxy_set_header Host $scheme://$http_host;

                proxy_pass http://127.0.0.1:9000;
	}

        location /files {
                if ($request_method = OPTIONS ) {
                        add_header Content-Length 0;
                        add_header Content-Type text/plain;
                        add_header Access-Control-Allow-Origin *;
                        add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization, authorization";
                        return 200;
                }
                #proxy_set_header Host inkers.localhost;
                proxy_set_header X-Frappe-Site-Name inkers.localhost;
        	add_header Access-Control-Allow-Origin *;
		#add_header              'Access-Control-Allow-Origin' '$http_origin' always;
		#root /home/satyajit/colliers-project/colliers-dev/development/inkers-bench/sites;
		#try_files /inkers.localhost/public/$uri =404;
                #proxy_pass http://127.0.0.1:8000;
		try_files /inkers.localhost/public/$uri  =404;
        }
	location @webserver {
                proxy_set_header X-Forwarded-For $remote_addr;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_set_header X-Frappe-Site-Name inkers.localhost;
                proxy_set_header Host $host;
                proxy_set_header X-Use-X-Accel-Redirect True;
                proxy_read_timeout 120;
                proxy_redirect off;

                proxy_pass http://127.0.0.1:8000;
        }

        #proxy_buffer_size 128k;
        #proxy_buffers 4 256k;
        #proxy_busy_buffers_size 256k;

        add_header X-Frame-Options "SAMEORIGIN";
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Referrer-Policy "same-origin, strict-origin-when-cross-origin";
        #add_header Access-Control-Allow-Origin *;

        # optimizations
        sendfile on;
        keepalive_timeout 15;
        client_max_body_size 500m;
        client_body_buffer_size 16K;
        client_header_buffer_size 1k;

        # enable gzip compresion
        # based on https://mattstauffer.co/blog/enabling-gzip-on-nginx-servers-including-laravel-forge
        gzip on;
        gzip_http_version 1.1;
        gzip_comp_level 5;
        gzip_min_length 256;
        gzip_proxied any;
        gzip_vary on;
        gzip_types
                application/atom+xml
                application/javascript
                application/json
                application/rss+xml
                application/vnd.ms-fontobject
                application/x-font-ttf
                application/font-woff
                application/x-web-app-manifest+json
                application/xhtml+xml
                application/xml
                font/opentype
                image/svg+xml
                image/x-icon
                text/css
                text/plain
                text/x-component
                ;
                # text/html is always compressed by HttpGzipModule
}
